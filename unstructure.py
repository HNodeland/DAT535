import random

#This code was generated by ChatGPT.
def replace_specific_commas_outside_quotes(line, commas_to_replace):
    """
    Replaces specific commas (by position) outside quotes with spaces.

    Args:
        line (str): A line from the CSV file.
        commas_to_replace (set): A set of comma positions to replace with spaces.

    Returns:
        str: The line with specified commas outside quotes replaced with spaces.
    """
    new_line = ''
    in_quotes = False
    comma_count = 0  # Counts commas outside quotes
    for char in line:
        if char == '"':
            in_quotes = not in_quotes  # Toggle the in_quotes flag
            new_line += char
        elif char == ',':
            if in_quotes:
                new_line += char  # Keep comma if inside quotes
            else:
                comma_count += 1
                if comma_count in commas_to_replace:
                    new_line += ' '  # Replace specified commas with spaces
                else:
                    pass # 
        else:
            new_line += char
    return new_line

def add_random_duplicates(lines):
    """
    Adds a random number of duplicates to a random number of rows.

    Args:
        lines (list): The list of data lines.

    Returns:
        list: The list with duplicates added.
    """
    num_rows = len(lines)
    # Decide on a random number of rows to duplicate (between 1 and total number of rows)
    num_rows_to_duplicate = random.randint(1, num_rows)
    # Randomly select indices of rows to duplicate
    indices_to_duplicate = random.sample(range(num_rows), num_rows_to_duplicate)
    
    for idx in indices_to_duplicate:
        # Decide on a random number of duplicates for each selected row
        num_duplicates = random.randint(1, 5)  # You can adjust the range as needed
        duplicate_line = lines[idx]
        for _ in range(num_duplicates):
            lines.append(duplicate_line)
    
    return lines

def main():
    input_file = 'DAT535_PROJECT/data/Earthquakes-1990-2023.csv'   # Replace with your input file name
    output_file = 'DAT535_PROJECT/data/unstructured2.txt' # Replace with your desired output file nam

    # Specify which commas to replace (e.g., commas number 8 and 9)
    # These are the commas between longitude, latitude, and depth
    commas_to_replace = {9, 10, 11}

    # Read the input CSV file
    with open(input_file, 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    # Process the header separately
    header = lines[0].strip()
    data_lines = [line.strip() for line in lines[1:]]
    
    # Replace specified commas outside quotes in each data line
    processed_lines = [replace_specific_commas_outside_quotes(line, commas_to_replace) for line in data_lines]
    
    # Add random duplicates to random rows
    processed_lines = add_random_duplicates(processed_lines)
    
    # Optionally shuffle the lines to mix duplicates
    random.shuffle(processed_lines)
    
    # Write the processed data to the output file
    with open(output_file, 'w', encoding='utf-8') as f:
        # Process and write the header
        f.write(replace_specific_commas_outside_quotes(header, commas_to_replace) + '\n')
        # Write each processed data line
        for line in processed_lines:
            f.write(line + '\n')

if __name__ == "__main__":
    main()
